buildscript {
    ext.kotlin_version = '1.3.10'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'

    id "com.jfrog.bintray" version "1.8.1"

    // bundle all dependencies into one fat shadowed jar
    // (gets automatically triggered when application plugin is present)
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}

apply plugin: "maven-publish"
apply plugin: "java-library"
apply plugin: 'org.jetbrains.dokka'


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

group 'de.debuglevel.omnitrackerdatabasebinding'
version '0.0.6'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.2'
    testImplementation 'org.assertj:assertj-core:3.11.1'

    // Logging
    // see http://saltnlight5.blogspot.com/2013/08/how-to-configure-slf4j-with-different.html for a quick introduction to slf4j
    implementation 'io.github.microutils:kotlin-logging:1.6.22'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-simple:1.7.25'

    // Databases
    compile group: 'net.sf.ucanaccess', name: 'ucanaccess', version: '4.0.4'
    compile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '6.4.0.jre8'

    // Configuration
    implementation 'com.natpryce:konfig:1.6.9.0'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier 'sources'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        javaMaven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['javaMaven']
    publish = true
    override = true
    pkg {
        repo = 'maven'
        name = 'omnitrackerdatabasebinding'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/debuglevel/omnitrackerdatabasebinding.git'
    }
}
